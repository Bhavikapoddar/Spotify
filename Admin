hiiii


using System;
using System.Collections.Generic;
using System.Linq;
using System.Web;
using System.Web.Mvc;
using Airline_Managementnew.Models; // Ensure this is correct

namespace Airline_Managementnew.Controllers
{
    public class AdminController : Controller
    {
        private readonly DatabaseContext db = new DatabaseContext();

        // AdminPanel Action Method: This is the dashboard
        public ActionResult AdminPanel()
        {
            // Get all routes first to ensure every route is displayed on the graph.
            var allRoutes = db.SearchRequest.ToList();
            
            // Get flight counts for each route that has at least one flight.
            var flightCounts = db.Flight
                .GroupBy(f => f.RouteId)
                .Select(g => new
                {
                    RouteId = g.Key,
                    FlightCount = g.Count()
                })
                .ToList();

            // Perform a LEFT JOIN using lambda syntax to combine all routes with the flight counts.
            // This is a robust way to achieve a left join in older C#.
            var flightStatistics = allRoutes.GroupJoin(
                flightCounts,
                route => route.RouteId,
                count => count.RouteId,
                (route, group) => new FlightStatisticViewModel
                {
                    RouteName = route.FromLocation + " to " + route.Tolocation,
                    FlightCount = group.Sum(c => c.FlightCount)
                })
                .ToList();

            // Pass the data to the view
            ViewBag.FlightStatistics = flightStatistics;

            // Also passing other data needed for the dashboard views
            ViewBag.Flights = db.Flight.ToList();
            ViewBag.Routes = allRoutes;

            return View();
        }

        // AddRoute Action Methods
        public ActionResult AddRoute()
        {
            ViewBag.Routes = db.SearchRequest.ToList();
            return View();
        }

        [HttpPost]
        public ActionResult AddRoute(SearchRequest route)
        {
            if (ModelState.IsValid)
            {
                db.SearchRequest.Add(route);
                db.SaveChanges(); // Important: Saves the change to the database
                return RedirectToAction("AdminPanel"); // Redirect to the dashboard to see the change
            }
            // If model is invalid, return to the view with the model
            return View(route); 
        }

        // EditRoute Action Methods
        public ActionResult EditRoute(int id)
        {
            var route = db.SearchRequest.Find(id);
            if (route == null)
            {
                return HttpNotFound();
            }
            return View(route);
        }

        [HttpPost]
        public ActionResult EditRoute(SearchRequest updatedRoute)
        {
            if (ModelState.IsValid)
            {
                var route = db.SearchRequest.Find(updatedRoute.RouteId);
                if (route != null)
                {
                    route.FromLocation = updatedRoute.FromLocation;
                    route.Tolocation = updatedRoute.Tolocation;
                    route.DepartureDate = updatedRoute.DepartureDate;
                    route.RouteNumber = updatedRoute.RouteNumber;
                    db.SaveChanges(); // Important: Saves the change
                }
                return RedirectToAction("AdminPanel"); // Redirect to the dashboard to see the change
            }
            // If model is invalid, return to the view with the model
            return View(updatedRoute);
        }

        // DeleteRoute Action Method
        public ActionResult DeleteRoute(int id)
        {
            var route = db.SearchRequest.Find(id);
            if (route != null)
            {
                db.SearchRequest.Remove(route);
                db.SaveChanges(); // Important: Saves the change
            }
            return RedirectToAction("AdminPanel"); // Redirect to the dashboard
        }

        // AddFlight Action Methods
        public ActionResult AddFlight()
        {
            ViewBag.Flights = db.Flight.ToList();
            ViewBag.Routes = db.SearchRequest.ToList();
            return View();
        }

        [HttpPost]
        public ActionResult AddFlight(Flight model)
        {
            if (ModelState.IsValid)
            {
                db.Flight.Add(model);
                db.SaveChanges(); // Important: Saves the change
                return RedirectToAction("AdminPanel"); // Redirect to the dashboard to see the change
            }
            ViewBag.Routes = db.SearchRequest.ToList();
            return View(model);
        }

        // EditFlight Action Methods
        public ActionResult EditFlight(int id)
        {
            var flight = db.Flight.Find(id);
            if (flight == null)
            {
                return HttpNotFound();
            }
            ViewBag.Routes = db.SearchRequest.ToList();
            return View(flight);
        }

        [HttpPost]
        public ActionResult EditFlight(Flight updatedFlight)
        {
            if (ModelState.IsValid)
            {
                var flight = db.Flight.Find(updatedFlight.FlightId);
                if (flight != null)
                {
                    flight.RouteId = updatedFlight.RouteId;
                    flight.DepartureCity = updatedFlight.DepartureCity;
                    flight.ArrivalCity = updatedFlight.ArrivalCity;
                    flight.DepartureTime = updatedFlight.DepartureTime;
                    flight.ArrivalTime = updatedFlight.ArrivalTime;
                    flight.EconomyPrice = updatedFlight.EconomyPrice;
                    flight.EconomySeats = updatedFlight.EconomySeats;
                    flight.BusinessPrice = updatedFlight.BusinessPrice;
                    flight.BusinessSeats = updatedFlight.BusinessSeats;
                    flight.FirstClassPrice = updatedFlight.FirstClassPrice;
                    flight.FirstClassSeats = updatedFlight.FirstClassSeats;
                    flight.AirplaneId = updatedFlight.AirplaneId;
                    flight.AirplaneNumber = updatedFlight.AirplaneNumber;
                    db.SaveChanges(); // Important: Saves the change
                }
                return RedirectToAction("AdminPanel"); // Redirect to the dashboard to see the change
            }
            ViewBag.Routes = db.SearchRequest.ToList();
            return View(updatedFlight);
        }

        // DeleteFlight Action Method
        public ActionResult DeleteFlight(int id)
        {
            var flight = db.Flight.Find(id);
            if (flight != null)
            {
                db.Flight.Remove(flight);
                db.SaveChanges(); // Important: Saves the change
            }
            return RedirectToAction("AdminPanel"); // Redirect to the dashboard
        }
        
        // PassengerInfo Action Method
        public ActionResult PassengerInfo()
        {
            var passengers = db.Passengers.ToList();
            return View(passengers);
        }
    }
}
