using System;
using System.Linq;
using System.Web.Mvc;
using HotelManagementSystem.Models;

namespace HotelManagementSystem.Controllers
{
    public class RoomBookingsController : Controller
    {
        private HotelDbContext db = new HotelDbContext();

        // GET: RoomBookings
        public ActionResult Index()
        {
            var bookings = db.RoomBookings.ToList();
            return View(bookings);
        }

        // GET: RoomBookings/Create
        public ActionResult Create()
        {
            ViewBag.CustomerID = new SelectList(db.Customers, "CustomerID", "Name");
            ViewBag.RoomID = new SelectList(db.Rooms, "RoomID", "RoomNumber");
            return View();
        }

        // POST: RoomBookings/Create
        [HttpPost]
        [ValidateAntiForgeryToken]
        public ActionResult Create(RoomBooking booking)
        {
            if (booking.CheckInDate < DateTime.Today)
            {
                ModelState.AddModelError("CheckInDate", "Check-In Date cannot be before today.");
            }

            if (booking.CheckOutDate < DateTime.Today)
            {
                ModelState.AddModelError("CheckOutDate", "Check-Out Date cannot be before today.");
            }

            if (booking.CheckOutDate < booking.CheckInDate)
            {
                ModelState.AddModelError("CheckOutDate", "Check-Out Date cannot be earlier than Check-In Date.");
            }

            if (ModelState.IsValid)
            {
                db.RoomBookings.Add(booking);
                db.SaveChanges();
                return RedirectToAction("Index");
            }

            ViewBag.CustomerID = new SelectList(db.Customers, "CustomerID", "Name", booking.CustomerID);
            ViewBag.RoomID = new SelectList(db.Rooms, "RoomID", "RoomNumber", booking.RoomID);
            return View(booking);
        }

        // GET: RoomBookings/Delete/5
        public ActionResult Delete(int id)
        {
            var booking = db.RoomBookings.Find(id);
            if (booking == null)
            {
                return HttpNotFound();
            }
            db.RoomBookings.Remove(booking);
            db.SaveChanges();
            return RedirectToAction("Index");
        }
    }
}
