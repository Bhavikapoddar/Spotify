using Microsoft.AspNetCore.Mvc;
using HotelManagementSystem.Models;
using System.Linq;

namespace HotelManagementSystem.Controllers
{
    public class RoomBookingsController : Controller
    {
        private HotelDbContext db = new HotelDbContext();

        public IActionResult Index()
        {
            var bookings = db.RoomBookings.ToList();
            return View(bookings);
        }

        public IActionResult Create()
        {
            ViewBag.Customers = db.Customers.ToList();
            ViewBag.Rooms = db.Rooms.ToList();
            return View();
        }

        [HttpPost]
        public IActionResult Create(RoomBooking booking)
        {
            ViewBag.Customers = db.Customers.ToList();
            ViewBag.Rooms = db.Rooms.ToList();

            if (booking.CheckInDate < DateTime.Today || booking.CheckOutDate < DateTime.Today)
            {
                ModelState.AddModelError("", "Dates cannot be earlier than today.");
                return View(booking);
            }

            if (booking.CheckOutDate < booking.CheckInDate)
            {
                ModelState.AddModelError("", "Check-out date cannot be earlier than check-in date.");
                return View(booking);
            }

            db.RoomBookings.Add(booking);
            db.SaveChanges();
            return RedirectToAction("Index");
        }

        public IActionResult Edit(int id)
        {
            var booking = db.RoomBookings.FirstOrDefault(r => r.BookingID == id);
            if (booking == null)
            {
                return NotFound();
            }

            ViewBag.Customers = db.Customers.ToList();
            ViewBag.Rooms = db.Rooms.ToList();
            return View(booking);
        }

        [HttpPost]
        public IActionResult Edit(RoomBooking booking)
        {
            ViewBag.Customers = db.Customers.ToList();
            ViewBag.Rooms = db.Rooms.ToList();

            if (booking.CheckInDate < DateTime.Today || booking.CheckOutDate < DateTime.Today)
            {
                ModelState.AddModelError("", "Dates cannot be earlier than today.");
                return View(booking);
            }

            if (booking.CheckOutDate < booking.CheckInDate)
            {
                ModelState.AddModelError("", "Check-out date cannot be earlier than check-in date.");
                return View(booking);
            }

            var existing = db.RoomBookings.FirstOrDefault(r => r.BookingID == booking.BookingID);
            if (existing != null)
            {
                existing.CustomerID = booking.CustomerID;
                existing.RoomID = booking.RoomID;
                existing.CheckInDate = booking.CheckInDate;
                existing.CheckOutDate = booking.CheckOutDate;

                db.SaveChanges();
            }

            return RedirectToAction("Index");
        }

        public IActionResult Delete(int id)
        {
            var booking = db.RoomBookings.FirstOrDefault(r => r.BookingID == id);
            if (booking != null)
            {
                db.RoomBookings.Remove(booking);
                db.SaveChanges();
            }
            return RedirectToAction("Index");
        }
    }
}
