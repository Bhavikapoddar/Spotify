using Hotel1.Models;
using Microsoft.AspNetCore.Mvc;
using System.Linq;

namespace Hotel1.Controllers
{
    public class RoomMasterController : Controller
    {
        private readonly HotelDbContext _context;

        public RoomMasterController(HotelDbContext context)
        {
            _context = context;
        }

        public IActionResult Index(string search)
        {
            var rooms = from r in _context.Rooms
                        select r;

            if (!string.IsNullOrEmpty(search))
            {
                rooms = rooms.Where(r => r.RoomNumber.Contains(search) || r.RoomType.Contains(search));
            }

            return View(rooms.ToList());
        }

        public IActionResult Create()
        {
            return View();
        }

        [HttpPost]
        public IActionResult Create(Room room)
        {
            if (ModelState.IsValid)
            {
                _context.Rooms.Add(room);
                _context.SaveChanges();
                return RedirectToAction("Index");
            }
            return View(room);
        }

        public IActionResult Edit(int id)
        {
            var room = _context.Rooms.Find(id);
            return View(room);
        }

        [HttpPost]
        public IActionResult Edit(Room room)
        {
            if (ModelState.IsValid)
            {
                _context.Rooms.Update(room);
                _context.SaveChanges();
                return RedirectToAction("Index");
            }
            return View(room);
        }

        public IActionResult Delete(int id)
        {
            var room = _context.Rooms.Find(id);
            _context.Rooms.Remove(room);
            _context.SaveChanges();
            return RedirectToAction("Index");
        }

        // For showing only available rooms
        public IActionResult Available()
        {
            var availableRooms = _context.Rooms.Where(r => r.Status == "Available").ToList();
            return View(availableRooms);
        }
    }
}
