.... 
using System;
using System.Collections.Generic;
using System.Linq;
using System.Web;
using System.Web.Mvc;
using Airline_Managementnew.Models;

namespace Airline_Managementnew.Controllers
{
    public class AdminController : Controller
    {
        // Use your actual DbContext class name here.
        // Based on your screenshots, it's likely DatabaseContext.
        private readonly DatabaseContext db = new DatabaseContext();

        // AdminPanel Action Method
        public ActionResult AdminPanel()
        {
            // 1. Get all flights and group them by RouteId
            // Based on your Flight class, the property is FlightId, not Flighted
            var allFlights = db.Flight.ToList();

            var flightCountsByRoute = allFlights
                .GroupBy(f => f.RouteId)
                .Select(g => new
                {
                    RouteId = g.Key,
                    FlightCount = g.Count()
                })
                .ToList();

            // 2. Get all routes from the database
            var allRoutes = db.SearchRequest.ToList();

            // 3. Join the flight counts with the route details
            var flightStatistics = flightCountsByRoute
                .Join(allRoutes,
                      count => count.RouteId,
                      route => route.RouteId,
                      (count, route) => new FlightStatisticViewModel
                      {
                          RouteName = route.FromLocation + " to " + route.Tolocation,
                          FlightCount = count.FlightCount
                      })
                .ToList();

            // 4. Pass the data to the view
            ViewBag.FlightStatistics = flightStatistics;

            // Also passing the other ViewBag data you were using
            ViewBag.Flights = db.Flight.ToList();
            ViewBag.Routes = db.SearchRequest.ToList();

            return View();
        }

        // AddRoute Action Methods
        public ActionResult AddRoute()
        {
            ViewBag.Routes = db.SearchRequest.ToList();
            return View();
        }

        [HttpPost]
        public ActionResult AddRoute(SearchRequest route)
        {
            if (ModelState.IsValid)
            {
                db.SearchRequest.Add(route);
                db.SaveChanges();
            }
            return RedirectToAction("AddRoute");
        }

        // EditRoute Action Methods
        public ActionResult EditRoute(int id)
        {
            var route = db.SearchRequest.Find(id);
            if (route == null)
            {
                return HttpNotFound();
            }
            return View(route);
        }

        [HttpPost]
        public ActionResult EditRoute(SearchRequest updatedRoute)
        {
            var route = db.SearchRequest.Find(updatedRoute.RouteId);
            if (route != null)
            {
                route.FromLocation = updatedRoute.FromLocation;
                route.Tolocation = updatedRoute.Tolocation;
                route.DepartureDate = updatedRoute.DepartureDate;
                route.RouteNumber = updatedRoute.RouteNumber;
                db.SaveChanges();
            }
            return RedirectToAction("AddRoute");
        }

        // DeleteRoute Action Method
        public ActionResult DeleteRoute(int id)
        {
            var route = db.SearchRequest.Find(id);
            if (route != null)
            {
                db.SearchRequest.Remove(route);
                db.SaveChanges();
            }
            return RedirectToAction("AddRoute");
        }

        // AddFlight Action Methods
        public ActionResult AddFlight()
        {
            ViewBag.Flights = db.Flight.ToList();
            ViewBag.Routes = db.SearchRequest.ToList();
            return View();
        }

        [HttpPost]
        public ActionResult AddFlight(Flight model)
        {
            if (ModelState.IsValid)
            {
                db.Flight.Add(model);
                db.SaveChanges();
                return RedirectToAction("AddFlight");
            }
            return View(model);
        }

        // EditFlight Action Methods
        public ActionResult EditFlight(int id)
        {
            var flight = db.Flight.Find(id);
            if (flight == null)
            {
                return HttpNotFound();
            }
            ViewBag.Routes = db.SearchRequest.ToList();
            return View(flight);
        }

        [HttpPost]
        public ActionResult EditFlight(Flight updatedFlight)
        {
            var flight = db.Flight.Find(updatedFlight.FlightId);
            if (flight != null)
            {
                flight.RouteId = updatedFlight.RouteId;
                flight.DepartureCity = updatedFlight.DepartureCity;
                flight.ArrivalCity = updatedFlight.ArrivalCity;
                flight.DepartureTime = updatedFlight.DepartureTime;
                flight.ArrivalTime = updatedFlight.ArrivalTime;
                flight.EconomyPrice = updatedFlight.EconomyPrice;
                flight.EconomySeats = updatedFlight.EconomySeats;
                flight.BusinessPrice = updatedFlight.BusinessPrice;
                flight.BusinessSeats = updatedFlight.BusinessSeats;
                flight.FirstClassPrice = updatedFlight.FirstClassPrice;
                flight.FirstClassSeats = updatedFlight.FirstClassSeats;
                flight.AirplaneId = updatedFlight.AirplaneId;
                flight.AirplaneNumber = updatedFlight.AirplaneNumber;
                db.SaveChanges();
            }
            return RedirectToAction("AddFlight");
        }

        // DeleteFlight Action Method
        public ActionResult DeleteFlight(int id)
        {
            var flight = db.Flight.Find(id);
            if (flight != null)
            {
                db.Flight.Remove(flight);
                db.SaveChanges();
            }
            return RedirectToAction("AddFlight");
        }
        
        // PassengerInfo Action Method
        public ActionResult PassengerInfo()
        {
            var passengers = db.Passengers.ToList();
            return View(passengers);
        }
    }
}
