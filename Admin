hii
------adminController---------
using System;
using System.Collections.Generic;
using System.Web.Mvc;
using Airline.Models;

namespace Airline.Controllers
{
    public class AdminController : Controller
    {
        // Static lists to store routes and flights
        private static List<SearchRequest> routes = new List<SearchRequest>();
        private static List<Flight> flights = new List<Flight>();

        public ActionResult AdminPanel()
        {
            return View();
        }

        // ✅ Show AddRoute form
        [HttpGet]
        public ActionResult AddRoute()
        {
            return View(routes); // Pass saved routes to the view
        }

        // ✅ Handle AddRoute form submission
        [HttpPost]
        public ActionResult AddRoute(string FromLocation, string ToLocation, DateTime DepartureDate)
        {
            routes.Add(new SearchRequest
            {
                FromLocation = FromLocation,
                ToLocation = ToLocation,
                DepartureDate = DepartureDate
            });

            return RedirectToAction("AddRoute");
        }

        // ✅ Show AddFlight form with existing flights
        [HttpGet]
        public ActionResult AddFlight()
        {
            return View(flights); // Pass saved flights to the view
        }

        // ✅ Handle AddFlight form submission
        [HttpPost]
        public ActionResult AddFlight(Flight flight)
        {
            flight.Id = flights.Count + 1; // Simulate unique ID
            flights.Add(flight);
            return RedirectToAction("AddFlight");
        }
        public ActionResult DeleteFlight(int id)
        {
            flights.RemoveAll(f => f.Id == id);
            return RedirectToAction("AddFlight");
        }

        public ActionResult PassengerInfo()
        {
            return View();
        }
    }
}
----------------------------------
AddFlight.cshtml
@model List<Airline.Models.Flight>

@{
    ViewBag.Title = "Add Flight";
    Layout = "~/Views/Shared/_Layout.cshtml"; // Change if needed
}

<h2>Add Flight</h2>

@using (Html.BeginForm("AddFlight", "Admin", FormMethod.Post))
{
    <div>
        <label>Departure City:</label>
        <input type="text" name="DepartureCity" required />
    </div>
    <div>
        <label>Arrival City:</label>
        <input type="text" name="ArrivalCity" required />
    </div>
    <div>
        <label>Departure Time:</label>
        <input type="datetime-local" name="DepartureTime" required />
    </div>
    <div>
        <label>Arrival Time:</label>
        <input type="datetime-local" name="ArrivalTime" required />
    </div>
    <div>
        <label>Economy Price:</label>
        <input type="number" name="EconomyPrice" required />
    </div>
    <div>
        <label>Economy Seats:</label>
        <input type="number" name="EconomySeats" required />
    </div>
    <div>
        <label>Business Price:</label>
        <input type="number" name="BusinessPrice" required />
    </div>
    <div>
        <label>Business Seats:</label>
        <input type="number" name="BusinessSeats" required />
    </div>
    <div>
        <label>First Class Price:</label>
        <input type="number" name="FirstClassPrice" />
    </div>
    <div>
        <label>First Class Seats:</label>
        <input type="number" name="FirstClassSeats" />
    </div>
    <div>
        <label>Airplane ID:</label>
        <input type="text" name="AirplaneId" required />
    </div>
    <div>
        <label>Airplane Number:</label>
        <input type="text" name="AirplaneNumber" required />
    </div>
    <button type="submit">Add Flight</button>
}

<hr />

<h3>Saved Flights</h3>

@if (Model != null && Model.Count > 0)
{
    <table border="1">
        <tr>
            <th>ID</th>
            <th>From</th>
            <th>To</th>
            <th>Dep Time</th>
            <th>Arr Time</th>
            <th>Economy</th>
            <th>Business</th>
            <th>First Class</th>
            <th>Plane ID</th>
            <th>Plane No</th>
            <th>Action</th>
        </tr>
        @for (int i = 0; i < Model.Count; i++)
        {
            <tr>
                <td>@Model[i].Id</td>
                <td>@Model[i].DepartureCity</td>
                <td>@Model[i].ArrivalCity</td>
                <td>@Model[i].DepartureTime.ToString("dd MMM yyyy hh:mm tt")</td>
                <td>@Model[i].ArrivalTime.ToString("dd MMM yyyy hh:mm tt")</td>
                <td>₹@Model[i].EconomyPrice (Seats: @Model[i].EconomySeats)</td>
                <td>₹@Model[i].BusinessPrice (Seats: @Model[i].BusinessSeats)</td>
                <td>
                    @if (Model[i].FirstClassPrice.HasValue)
                    {
                        @($"₹{Model[i].FirstClassPrice} (Seats: {Model[i].FirstClassSeats})")
                    }
                    else
                    {
                        @("N/A")
                    }
                </td>
                <td>@Model[i].AirplaneId</td>
                <td>@Model[i].AirplaneNumber</td>
                <td>
                    @Html.ActionLink("Delete", "DeleteFlight", new { id = Model[i].Id })
                </td>
            </tr>
        }
    </table>
}
else
{
    <p>No flights added yet.</p>
}
---------------------------
AddRoute.cshtml
@{
    ViewBag.Title = "Add Route";
    Layout = null;
}

<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8" />
    <title>Add Route</title>
    <style>
        body {
            font-family: Arial;
            padding: 20px;
        }

        .form-group {
            margin-bottom: 15px;
        }

        label {
            display: block;
            font-weight: bold;
        }

        input[type="text"], input[type="date"] {
            width: 300px;
            padding: 8px;
            font-size: 14px;
        }

        button {
            padding: 8px 16px;
            font-size: 16px;
            background-color: #007bff;
            color: white;
            border: none;
            cursor: pointer;
            border-radius: 4px;
            margin-right: 5px;
        }

        .route-card {
            background-color: #f2f2f2;
            border-left: 4px solid #007bff;
            padding: 10px;
            margin-top: 15px;
        }

        .actions {
            margin-top: 10px;
        }

            .actions button {
                background-color: #28a745;
            }

            .actions .delete-btn {
                background-color: #dc3545;
            }
    </style>
</head>
<body>
    <h2>Add Route</h2>

    <div class="form-group">
        <label for="from">From</label>
        <input type="text" id="from" placeholder="Enter departure city" />
    </div>

    <div class="form-group">
        <label for="to">To</label>
        <input type="text" id="to" placeholder="Enter destination city" />
    </div>

    <div class="form-group">
        <label for="date">Departure Date</label>
        <input type="date" id="date" />
    </div>

    <button onclick="saveRoute()">Save</button>

    <div id="routesList"></div>

    <script>
        let routes = [];
        let editIndex = -1;

        function saveRoute() {
            const from = document.getElementById("from").value;
            const to = document.getElementById("to").value;
            const date = document.getElementById("date").value;

            if (!from || !to || !date) {
                alert("Please fill all fields.");
                return;
            }

            const route = { from, to, date };

            if (editIndex === -1) {
                routes.push(route);
            } else {
                routes[editIndex] = route;
                editIndex = -1;
            }

            document.getElementById("from").value = "";
            document.getElementById("to").value = "";
            document.getElementById("date").value = "";

            displayRoutes();
        }

        function displayRoutes() {
            const list = document.getElementById("routesList");
            list.innerHTML = "";

            routes.forEach((r, index) => {
                const div = document.createElement("div");
                div.className = "route-card";

                div.innerHTML = `
                        <p><strong>From:</strong> ${r.from}</p>
                        <p><strong>To:</strong> ${r.to}</p>
                        <p><strong>Date:</strong> ${r.date}</p>
                        <div class="actions">
                            <button onclick="editRoute(${index})">Edit</button>
                            <button class="delete-btn" onclick="deleteRoute(${index})">Delete</button>
                        </div>
                    `;

                list.appendChild(div);
            });
        }

        function editRoute(index) {
            const r = routes[index];
            document.getElementById("from").value = r.from;
            document.getElementById("to").value = r.to;
            document.getElementById("date").value = r.date;
            editIndex = index;
        }

        function deleteRoute(index) {
            if (confirm("Are you sure you want to delete this route?")) {
                routes.splice(index, 1);
                displayRoutes();
            }
        }
    </script>
</body>
</html>
--------------------------
Adminpanel.cshtml
@{
    Layout = null;
}

<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8" />
    <title>Admin Dashboard</title>
    <link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/4.0.0/css/bootstrap.min.css" />
    <style>
        body {
            font-family: 'Segoe UI', sans-serif;
            background-color: #f4f6f9;
        }

        .sidebar {
            height: 100vh;
            background-color: #343a40;
            color: white;
            padding-top: 20px;
        }

            .sidebar a {
                color: #ffffff;
                display: block;
                padding: 15px;
                text-decoration: none;
            }

                .sidebar a:hover {
                    background-color: #495057;
                }

        .content {
            padding: 30px;
        }

        .active-tab {
            background-color: #007bff !important;
        }
    </style>
</head>
<body>
    <div class="container-fluid">
        <div class="row">
            <!-- Sidebar -->
            <div class="col-md-2 sidebar">
                <a href="javascript:void(0);" class="active-tab" onclick="showTab('routeSection')">➕ Add Route</a>
                <a href="javascript:void(0);" onclick="showTab('flightSection')">🛩️ Add Flights</a>
                <a href="javascript:void(0);" onclick="showTab('passengerSection')">👤 Passenger Info</a>
            </div>

            <!-- Content -->
            <div class="col-md-10 content">
                <div id="routeSection" class="tab-section">
                    @Html.Partial("AddRoute", new List<Airline.Models.SearchRequest>())
                </div>

                <div id="flightSection" class="tab-section" style="display:none;">
                    @Html.Partial("AddFlight", new List<Airline.Models.Flight>())
                </div>

                <div id="passengerSection" class="tab-section" style="display:none;">
                    @Html.Partial("PassengerInfo", new List<Airline.Models.Passenger>())

                </div>
            </div>
        </div>
    </div>

    <script>
        function showTab(tabId) {
            var tabs = document.getElementsByClassName('tab-section');
            for (var i = 0; i < tabs.length; i++) {
                tabs[i].style.display = 'none';
            }
            document.getElementById(tabId).style.display = 'block';

            var links = document.querySelectorAll('.sidebar a');
            for (var i = 0; i < links.length; i++) {
                links[i].classList.remove('active-tab');
            }
            var activeLink = document.querySelector('[onclick*="' + tabId + '"]');
            if (activeLink) activeLink.classList.add('active-tab');
        }
    </script>
</body>
</html>
----------------
passenger.cshtml
@model List<Airline.Models.Passenger>

@{
    ViewBag.Title = "Passenger List";
}

<div class="container mt-5">
    <h2 class="text-center mb-4">All Booked Passengers</h2>
    <table class="table table-bordered table-striped">
        <thead class="table-dark">
            <tr>
                <th>Passenger Name</th>
                <th>Gender</th>
                <th>Age</th> 
                <th>Mobile</th>
                <th>Seat</th>
                <th>Class</th>
                <th>Flight</th>
                <th>From</th>
                <th>To</th>
                <th>Departure</th>
                <th>Arrival</th>
                <th>Booked On</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var p in Model)
            {
                <tr>
                    <td>@p.Title @p.FirstName @p.LastName</td>
                    <td>@p.Gender</td>
                    <td>@p.Age</td> 
                    <td>@p.MobileNumber</td>
                    <td>@p.SeatNumber</td>
                    <td>@p.Class</td>
                    <td>@p.AirplaneNumber</td>
                    <td>@p.DepartureCity</td>
                    <td>@p.ArrivalCity</td>
                    <td>@p.DepartureDate.ToShortDateString() @p.DepartureTime</td>
                    <td>@p.ArrivalTime</td>
                    <td>@p.BookingDate.ToString("dd-MMM-yyyy hh:mm tt")</td>
                </tr>
            }
        </tbody>
    </table>
</div>
--------------

